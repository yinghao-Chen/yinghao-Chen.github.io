<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>服务器监控之zabbix</title>
      <link href="/2018/11/17/fu-wu-qi-jian-kong-zhi-zabbix/"/>
      <url>/2018/11/17/fu-wu-qi-jian-kong-zhi-zabbix/</url>
      
        <content type="html"><![CDATA[<p>前段时间有监控服务器主机、应用、交换机等的需求，所以对zabbix进行了学习，现在整理记录全过程。</p><pre><code>1.zabbix概述</code></pre><p>Zabbix由以下几个组件构成：<br>1.1 zabbix_server: Zabbix server 是agent程序报告系统可用性、系统完整性和统计数据的核心组件，是所有配置信息、统计信息和操作数据的核心存储器。<br>1.2 Web界面:由php编写，是Zabbix Server的一部分，通常(使用SQLite需要，其他不是必须)跟Zabbix Server运行在同一台物理机器上。<br>1.3 Proxy代理服务器<br>Zabbix proxy 可以替Zabbix Server收集性能和可用性数据。Proxy代理服务器是Zabbix软件可选择部署的一部分；当然，Proxy代理服务器可以帮助单台Zabbix Server分担负载压力。<br>1.4 zabbix_agent监控代理<br>Zabbix agents部署在监控目标上，能够主动监控本地资源和应用程序，并将收集到的数据报告给Zabbix Server。<br>基本步骤: 创建主机（host）-&gt; 创建监控项(item) -&gt; 如果需要：监控项里创建触发器（trigger）-&gt; 告警动作（action）<br><a id="more"></a></p><pre><code>2.环境安装与配置</code></pre><p>2.1 环境准备:<br>    Centos6.5<br>    zabbix-3.4.13.tar.gz(server)<br>    php<br>    nginx<br>2.2 安装server:<br>2.2.1 $ tar -zxvf zabbix-3.4.0.tar.gz<br>2.2.2 Create user account:<br>    <pre><code>groupadd --system zabbixuseradd --system -g zabbix -d &#x2F;usr&#x2F;lib&#x2F;zabbix -s &#x2F;sbin&#x2F;nologin -c &quot;Zabbix Monitoring System&quot; zabbix</code></pre><br>2.2.3 Create Zabbix database<br>    导入安装包下的数据库脚本（3个）<br>    source schema.sql, images.sql, data.sql<br>2.2.4 安装依赖<br>    net-snmp-devel  libxml2-devel  libcurl-devel ….<br>2.2.5 Configure the sources<br>    To configure the sources for a Zabbix server and agent, you may run something like:<br>    <pre><code>.&#x2F;configure --enable-server --enable-agent --with-mysql --enable-ipv6 --with-net-snmp --with-libcurl --with-libxml2  --enable-java</code></pre><br>    <img class="asset_img image2.png 823 776 example image"><br>    <br>2.2.6 Make &amp;&amp; make install<br>    Running ‘make install’ will by default install the daemon binaries (zabbix_server, zabbix_agentd, zabbix_proxy) in /usr/local/sbin and the client binaries (zabbix_get, zabbix_sender) in /usr/local/bin.<br>Review and edit configuration files: /usr/local/etc/zabbix_server.conf<br>    <blockquote><p>#Database host name.<br>DBHost=localhost</p><p>#Database name. 必须<br>DBName=zabbix<br>DBPassword=123456<br>DBPort=3306<br>DBUser=zabbix<br>LogFile=/tmp/zabbix_server.log必须</p></blockquote><br>2.2.7 Start up the daemons<br>    zabbix_server<br>    <pre><code>cd &#x2F;usr&#x2F;local&#x2F;sbin&#x2F;zabbix_java&#x2F;  .&#x2F;startup.sh</code></pre><br>2.2.8 zabbix_agent<br>    a) linux<br>    1 配置/usr/local/etc/zabbix_agentd.conf<br>        <blockquote><p>Server=121.42.111.220<br>ServerActive=127.0.0.1<br>Hostname=Linux1</p></blockquote><br>    2 cp /usr/zabbix/zabbix-3.4.13/misc/init.d/tru64/zabbix_agentd /etc/init.d/<br>    3 chmod +x /etc/init.d/zabbix_agentd<br>    4 启动<br>        <pre><code>&#x2F;etc&#x2F;init.d&#x2F;zabbix_agentd start</code></pre><br>    b) windows<br>    1 配置zabbix agent.win.conf<br>    2 安装<br>        <pre><code>E:\zabbix\bin\win64\zabbix_agentd.exe -i -c E:\zabbix\conf\zabbix_agentd.win.conf</code></pre><br>    3 启动<br>        <pre><code>E:\zabbix\bin\win64&gt;zabbix_agentd.exe -c E:\zabbix\conf\zabbix_agentd.win.conf –s</code></pre><br>    4   netstat -ano|findstr “10050”<br>        tasklist|findstr “10268”<br>2.2.9 zabbix_proxy<br>    1 <pre><code>.&#x2F;configure --prefix=&#x2F;usr&#x2F;local&#x2F;zabbix_proxy --enable-proxy --enable-agent --with-mysql --with-net-snmp --with-libcurlmakemake install</code></pre><br>    2 <pre><code>create database zabbix_proxy;grant all on zabbix_proxy.* to &#39;user&#39;@&#39;host&#39; identified by &#39;password;flush privileges;mysql -hhostname -uuser -ppassword zabbix_proxy &lt; zabbix-2.2.1&#x2F;database&#x2F;mysql&#x2F;schema.sql</code></pre><br>    3 zabbix_proxy.conf<br>        <blockquote><p>Server=IP　　#zabbix服务端IP<br>Hostname=Zabbix_proxy　　#必须和WEB页面添加代理时设置的名称一致<br>LogFile=/tmp/zabbix_proxy.log<br>DBHost=IP　　#数据库IP<br>DBName=zabbix_proxy　　数据库名<br>DBUser=user　　#数据库用户名<br>DBPassword=password　　#数据库密码</p></blockquote><br>    4 启动 /usr/local/zabbix_proxy/sbin/zabbix_proxy<br>    5 在zabbix web页面添加代理;<br>        在proxy服务器上面测试,<br>        <pre><code>&#x2F;usr&#x2F;local&#x2F;zabbix_agentd&#x2F;bin&#x2F;zabbix_get -s IP -k agent.ping</code></pre><br>2.2.10 安装nginx:<br>    1 <pre><code>.&#x2F;configure --prefix=&#x2F;usr&#x2F;local&#x2F;nginx --with-http_stub_status_module --with-http_ssl_module --with-pcre</code></pre><br>    <br>    2 <pre><code>make make install</code></pre><br>    3 启动  /usr/local/nginx/sbin/nginx<br>    4 访问 curl -s <a href="http://localhost" target="_blank" rel="noopener">http://localhost</a> | grep nginx.com<br>    5 停止 /usr/local/nginx/sbin/nginx -s stop<br>    6      /usr/local/nginx/sbin/nginx -s reload<br>        <br>        <br>    7 修改nginx的配置文件，在server里加上：<br>        <pre><code>location &#x2F;ngx_status {stub_status on;access_log off;allow 127.0.0.1;allow 192.168.137.1;}location ~ \.php$ {          root           &#x2F;data&#x2F;site&#x2F;monitor.ttlsa.com&#x2F;zabbix;          fastcgi_pass   127.0.0.1:9000;          fastcgi_index  zabbix.php;          fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;          include        fastcgi_params;      }      location ~* ^.+\.(ico|gif|jpg|jpeg|png|html|css|htm|bmp|js|svg)$ {          root           &#x2F;data&#x2F;site&#x2F;monitor.ttlsa.com&#x2F;zabbix;      }</code></pre><br>    8 <a href="http://192.168.137.128/ngx_status" target="_blank" rel="noopener">http://192.168.137.128/ngx_status</a><br>        <br>2.2.11 安装Php:<br>    1 依赖 gd-devel libjpeg-devel libpng-devel libxml2-devel bzip2-devel libcurl-devel<br>        tar –zxvf php-7.2.9.tar.gz<br>        ./configure –prefix=/usr/local/php \<br>            –with-config-file-path=/usr/local/php/etc –with-bz2 –with-curl \<br>            –enable-ftp –enable-sockets –disable-ipv6 –with-gd \<br>            –with-jpeg-dir=/usr/local –with-png-dir=/usr/local \<br>            –with-freetype-dir=/usr/local –enable-gd-native-ttf \<br>            –with-iconv-dir=/usr/local –enable-mbstring –enable-calendar \<br>            –with-gettext –with-libxml-dir=/usr/local –with-zlib \<br>            –with-pdo-mysql=mysqlnd –with-mysqli=mysqlnd –with-mysql=mysqlnd \<br>            –enable-dom –enable-xml –enable-fpm –with-libdir=lib64 –enable-bcmath \<br>            –with-ldap<br>        <br>    2 配置： </p><pre><code>    #复制php配置文件到安装目录    cp php.ini-production /usr/local/php/etc/php.ini    ln -s /usr/local/php/etc/php.ini  /etc/php.ini    ls -l /etc/php.ini    #复制模板文件为php-fpm配置    cp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf    ln -s /usr/local/php/etc/php-fpm.conf  /etc/php-fpm.conf    #复制php-fpm到启动目录    cp /usr/php/php-7.2.9/sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm    ls -l /etc/init.d/php-fpm    #赋予php-fpm执行权限    chmod 755 /etc/init.d/php-fpm    #设置php-fpm开机启动    chkconfig php-fpm on    chkconfig --list php-fpm    #编辑php配置文件php.ini    vim /usr/local/php/etc/php.ini    {% asset_img image8.png Example image %}    disable_functions=passthru,exec,system,chroot,scandir,chgrp,chown,shell_exec,proc_open,proc_get_status,ini_alter,ini_alter,ini_restore,dl,openlog,syslog,readlink,symlink,popepassthru,stream_socket_server,escapeshellcmd,dll,popen,disk_free_space,checkdnsrr,checkdnsrr,getservbyname,getservbyport,disk_total_space,posix_ctermid,posix_get_last_error,posix_getcwd,posix_getegid,posix_geteuid,posix_getgid,posix_getgrgid,posix_getgrnam,posix_getgroups,posix_getlogin,posix_getpgid,posix_getpgrp,posix_getpid,posix_getppid,posix_getpwnam,posix_getpwuid,posix_getrlimit,posix_getsid,posix_getuid,posix_isatty,posix_kill,posix_mkfifo,posix_setegid,posix_seteuid,posix_setgid,posix_setpgid,posix_setsid,posix_setuid,posix_strerror,posix_times,posix_ttyname,posix_uname    启动 /usr/local/php/sbin/php-fpm    {% asset_img image9.png Example image %}    (注意：需要 php-fpm.d下 cp www.conf.default www.conf)    eg: whereis php</code></pre><p>2.2.12 zabbix前端<br>    1 拷贝前端文件<br>        mkdir /data/logs/nginx<br>        mkdir /data/site/monitor.ttlsa.com/zabbix<br>        cp -rp frontends/php/* /data/site/monitor.ttlsa.com/zabbix</p><pre><code>    php 配置http://192.168.137.128/info.php    zabbix前端：http://192.168.137.128/setup.php 出错直接到php源码把抛出异常的地方注释掉貌似没什么问题？    编译时参数加入了php配置路径，Loaded Configuration File还是找不到，然后通过跟踪strace /usr/local/php/sbin/php-fpm -i 2&gt;1.log    {% asset_img image10.png Example image %}    mv php.ini /usr/local/php-5.5.0/etc/  解决，，    nginx配置（后面那个不加的话，页面访问只有纯文字）    {% asset_img image11.png Example image %}2 编译安装php的过程中报错：    第一个报错：    configure: error: Cannot find ldap.h    yum install openldap openldap-devel  -y    第二个报错：    configure: error: Cannot find ldap libraries in /usr/lib    cp -frp /usr/lib64/libldap* /usr/lib/    然后再 ./configure  --with-php-config=/usr/local/php/bin/php-config  --with-ldap</code></pre><p>2.2.13 调用api获取数据：<br>    curl -X POST -H “Content-Type”:application/json-rpc –data ‘{“jsonrpc”:”2.0”, “method”:”apiinfo.version”, “id”:1, “auth”:null, “params”:{}}’ <a href="http://192.168.137.128/api_jsonrpc.php" target="_blank" rel="noopener">http://192.168.137.128/api_jsonrpc.php</a></p><p>2.2.14 tomcat监控<br>    在tomcat目录下放入catalina-jmx-remote-xx.jar<br>    在bin目录下创建文件setenv.bat：<br>    set “JAVA_OPTS=-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.port=12345  -Dcom.sun.management.jmxremote.authenticate=false  -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=192.168.3.131”</p><p>2.2.15 Windows mysql监控<br>    mysql.ping.vbs<br>    <pre><code>Set objFS =CreateObject(&quot;Scripting.FileSystemObject&quot;)Set objArgs = WScript.Argumentsstr1 = getCommandOutput(&quot;C:\Program Files\MySQL\MySQL Server 5.7\bin\mysqladmin-uroot -p&#39;123456&#39; ping&quot;)  If Instr(str1,&quot;alive&quot;) &gt; 0 ThenWScript.Echo 1ElseWScript.Echo 0End If Function getCommandOutput(theCommand) Dim objShell, objCmdExecSet objShell =CreateObject(&quot;WScript.Shell&quot;)Set objCmdExec = objshell.exec(thecommand)getCommandOutput =objCmdExec.StdOut.ReadAllend Function</code></pre><br>    MYSQL-status.vbs<br>    <pre><code>Set objFS = CreateObject(&quot;Scripting.FileSystemObject&quot;)Set objArgs = WScript.Argumentsstr1 = getCommandOutput(&quot;C:\Program Files\MySQL\MySQL Server 5.7\bin\mysqladmin-uroot -p&#39;123456&#39; extended-status&quot;) Arg = objArgs(0)str2 = Split(str1,&quot;|&quot;) For i = LBound(str2) to UBound(str2) If Trim(str2(i)) = Arg Then   WScript.Echo TRIM(str2(i+1))Exit ForEnd IfnextFunction getCommandOutput(theCommand) Dim objShell, objCmdExecSet objShell =CreateObject(&quot;WScript.Shell&quot;)Set objCmdExec = objshell.exec(thecommand)getCommandOutput =objCmdExec.StdOut.ReadAll end Function</code></pre><br>    mysql_version.vbs<br>    <pre><code>Set objFS = CreateObject(&quot;Scripting.FileSystemObject&quot;)Set objArgs = WScript.Argumentsstr1 = getCommandOutput(&quot;C:\Program Files\MySQL\MySQL Server 5.7\bin\mysql.exe -V&quot;)WScript.Echo str1Function getCommandOutput(theCommand)Dim objShell, objCmdExecSet objShell = CreateObject(&quot;WScript.Shell&quot;)Set objCmdExec = objshell.exec(thecommand)getCommandOutput = objCmdExec.StdOut.ReadAllend Function</code></pre><br>    修改zabbix_agentd.win.conf<br>    <pre><code>UnsafeUserParameters=1UserParameter=mysql.version, cscript &#x2F;nologo  E:\zabbix_agent\scripts\mysql_version.vbsUserParameter=mysql.status[*], cscript &#x2F;nologo E:\zabbix_agent\scripts\MYSQL-status.vbs $1 UserParameter=mysql.ping, cscript &#x2F;nologo E:\zabbix_agent\scripts\mysql_ping.vbs</code></pre></p><p>2.2.16 linux mysql 监控：<br>    找到mysql目录：find / -name mysqladmin    (userparameter_mysql.conf)<br>    cd /usr/local/zabbix/etc  vi .my.cnf<br>    <pre><code>[client]user=roothost=192.168.3.230password=123456</code></pre><br>    vi /usr/local/zabbix/etc/zabbix_agentd.conf<br>    <pre><code>#UserParameter=mysql.status[*],echo &quot;show global status where Variable_name=&#39;$1&#39;;&quot; | HOME=&#x2F;var&#x2F;lib&#x2F;zabbix mysql -N | awk &#39;{print $$2}&#39;UserParameter=mysql.status[*],&#x2F;usr&#x2F;local&#x2F;zabbix&#x2F;etc&#x2F;chk_mysql.sh $1 UserParameter=mysql.size[*],bash -c &#39;echo &quot;select sum($(case &quot;$3&quot; in both|&quot;&quot;) echo &quot;data_length+index_length&quot;;; data|index) echo &quot;$3_length&quot;;; free) echo &quot;data_free&quot;;; esac)) from information_schema.tables$([[ &quot;$1&quot; = &quot;all&quot; || ! &quot;$1&quot; ]] || echo &quot; where table_schema=\&quot;$1\&quot;&quot;)$([[ &quot;$2&quot; = &quot;all&quot; || ! &quot;$2&quot; ]] || echo &quot;and table_name=\&quot;$2\&quot;&quot;);&quot; | &#x2F;usr&#x2F;bin&#x2F;mysql -uroot -p123456 -N&#39;UserParameter=mysql.ping, &#x2F;usr&#x2F;bin&#x2F;mysqladmin -uroot -p123456 ping | grep -c aliveUserParameter=mysql.version, &#x2F;usr&#x2F;bin&#x2F;mysql -uroot -p123456 –V</code></pre><br>    将以上mysql路径改为HOME=/usr/local/zabbix/etc, 例如：UserParameter=mysql.ping,HOME=/var/lib/zabbix mysqladmin ping | grep -c alive<br>    Vi chk_mysql.sh<br>    <pre><code>#!&#x2F;bin&#x2F;bash# 用户名MYSQL_USER=&#39;root&#39;# 密码MYSQL_PWD=&#39;123456&#39;# 主机地址&#x2F;IPMYSQL_HOST=&#39;192.168.3.230&#39;# 端口MYSQL_PORT=&#39;3306&#39;# 数据连接MYSQL_CONN=&quot;&#x2F;usr&#x2F;bin&#x2F;mysqladmin -u${MYSQL_USER} -p${MYSQL_PWD} -h${MYSQL_HOST} -P${MYSQL_PORT}&quot;# 参数是否正确if [ $# -ne &quot;1&quot; ];then echo &quot;arg error!&quot; fi # 获取数据case $1 in    Uptime)        result=`${MYSQL_CONN} status 2&gt;&#x2F;dev&#x2F;null |cut -f2 -d&quot;:&quot;|cut -f1 -d&quot;T&quot;`        echo $result        ;;    Com_update)        result=`${MYSQL_CONN} extended-status 2&gt;&#x2F;dev&#x2F;null |grep -w &quot;Com_update&quot;|cut -d&quot;|&quot; -f3`        echo $result        ;;    Slow_queries)        result=`${MYSQL_CONN} status 2&gt;&#x2F;dev&#x2F;null |cut -f5 -d&quot;:&quot;|cut -f1 -d&quot;O&quot;`        echo $result        ;;    Com_select)        result=`${MYSQL_CONN} extended-status 2&gt;&#x2F;dev&#x2F;null |grep -w &quot;Com_select&quot;|cut -d&quot;|&quot; -f3`        echo $result                ;;    Com_rollback)        result=`${MYSQL_CONN} extended-status 2&gt;&#x2F;dev&#x2F;null |grep -w &quot;Com_rollback&quot;|cut -d&quot;|&quot; -f3`                echo $result                ;;    Questions)        result=`${MYSQL_CONN} status 2&gt;&#x2F;dev&#x2F;null |cut -f4 -d&quot;:&quot;|cut -f1 -d&quot;S&quot;`                echo $result                ;;    Com_insert)        result=`${MYSQL_CONN} extended-status 2&gt;&#x2F;dev&#x2F;null |grep -w &quot;Com_insert&quot;|cut -d&quot;|&quot; -f3`                echo $result                ;;    Com_delete)        result=`${MYSQL_CONN} extended-status 2&gt;&#x2F;dev&#x2F;null |grep -w &quot;Com_delete&quot;|cut -d&quot;|&quot; -f3`                echo $result                ;;    Com_commit)        result=`${MYSQL_CONN} extended-status 2&gt;&#x2F;dev&#x2F;null |grep -w &quot;Com_commit&quot;|cut -d&quot;|&quot; -f3`                echo $result                ;;    Bytes_sent)        result=`${MYSQL_CONN} extended-status 2&gt;&#x2F;dev&#x2F;null |grep -w &quot;Bytes_sent&quot; |cut -d&quot;|&quot; -f3`                echo $result                ;;    Bytes_received)        result=`${MYSQL_CONN} extended-status 2&gt;&#x2F;dev&#x2F;null |grep -w &quot;Bytes_received&quot; |cut -d&quot;|&quot; -f3`                echo $result                ;;    Com_begin)        result=`${MYSQL_CONN} extended-status 2&gt;&#x2F;dev&#x2F;null |grep -w &quot;Com_begin&quot;|cut -d&quot;|&quot; -f3`                echo $result                ;;        *)        echo &quot;Usage:$0(Uptime|Com_update|Slow_queries|Com_select|Com_rollback|Questions|Com_insert|Com_delete|Com_commit|Bytes_sent|Bytes_received|Com_begin)&quot;        ;; esac</code></pre><br>    chmod +x chk_mysql.sh</p><p>附：我监控用的一些脚本</p><pre><code>{% codeblock %}linux(centos6.5x64):vi zabbix_agentd.confUserParameter=mysql.status[*],/usr/local/zabbix/etc/chk_mysql.sh $1UserParameter=mysql.Threads,HOME=/usr/local/zabbix/etc mysqladmin status|cut -f3 -d":"|cut -f1 -d"Q"UserParameter=mysql.Qps,HOME=/usr/local/zabbix/etc mysqladmin  status|cut -f9 -d":"UserParameter=mysql.Key_buffer_size,HOME=/usr/local/zabbix/etc mysql  -e "show variables like 'key_buffer_size';"| grep -v Value |awk '{print $2/1024^2}'UserParameter=mysql.Key_cache_miss_rate,echo $(HOME=/usr/local/zabbix/etc mysql  -e "show status like 'key_reads';"| grep -v Value |awk '{print $2}') $(HOME=/usr/local/zabbix/etc mysql  -e "show status like 'key_read_requests';"| grep -v Value |awk '{print $2}')| awk '{printf("%1.4f\n",$1/$2*100)}'UserParameter=mysql.Key_blocks_used_rate,echo $(HOME=/usr/local/zabbix/etc mysql -e "show status like 'key_blocks_used';"| grep -v Value |awk '{print $2}') $(HOME=/usr/local/zabbix/etc mysql -e "show status like 'key_blocks_unused';"| grep -v Value |awk '{print $2}')| awk '{printf("%1.4f\n",$1/($1+$2)*100)}'UserParameter=mysql.Innodb_buffer_pool_size,HOME=/usr/local/zabbix/etc mysql -e "show variables like 'innodb_buffer_pool_size';"| grep -v Value |awk '{print $2/1024^2}'UserParameter=mysql.Threads_connected,HOME=/usr/local/zabbix/etc mysql -e "show status like 'Threads_connected';"| grep -v Value |awk '{print $2}'UserParameter=mysql.Table_open_cache_used_rate,echo $(HOME=/usr/local/zabbix/etc mysql -e "show status like 'open_tables';"| grep -v Value |awk '{print $2}') $(HOME=/usr/local/zabbix/etc mysql -e "show variables like 'table_open_cache';"| grep -v Value |awk '{print $2}')| awk '{printf("%1.4f\n",$1/($1+$2)*100)}'UserParameter=mysql.Qcache_used_rate,echo $(HOME=/usr/local/zabbix/etc mysql -e "show variables like 'query_cache_size';"| grep -v Value |awk '{print $2}') $(HOME=/usr/local/zabbix/etc mysql -e "show status like 'Qcache_free_memory';"| grep -v Value |awk '{print $2}')| awk '{printf("%1.4f\n",($1-$2)/$1*100)}'UserParameter=mysql.Qcache_fragment_rate,echo $(HOME=/usr/local/zabbix/etc mysql -e "show status like 'Qcache_free_blocks';"| grep -v Value |awk '{print $2}') $(HOME=/usr/local/zabbix/etc mysql -e "show status like 'Qcache_total_blocks';"| grep -v Value |awk '{print $2}')| awk '{printf("%1.4f\n",$1/$2*100)}'UserParameter=mysql.Max_used_connections,HOME=/usr/local/zabbix/etc mysql -e "show status like 'Max_used_connections';"| grep -v Value |awk '{print $2}'UserParameter=mysql.Qcache_hits_rate,echo $(HOME=/usr/local/zabbix/etc mysql -e "show status like 'Qcache_hits';"| grep -v Value |awk '{print $2}') $(HOME=/usr/local/zabbix/etc mysql -e "show status like 'Qcache_inserts';"| grep -v Value |awk '{print $2}')| awk '{printf("%1.4f\n",($1-$2)/$1*100)}'UserParameter=mysql.Open_files_rate, $(HOME=/usr/local/zabbix/etc mysql -e "show global status like 'open_files';"| grep -v Value |awk '{print $2}') $(HOME=/usr/local/zabbix/etc mysql -e "show variables like 'open_files_limit';"| grep -v Value |awk '{print $2}')| awk '{printf("%1.4f\n",$1/$2*100)}'UserParameter=mysql.Ping,HOME=/usr/local/zabbix/etc mysqladmin  ping|grep alive|wc -lUserParameter=mysql.version, HOME=/usr/local/zabbix/etc mysql -VUserParameter=discovery.processlist,/usr/local/zabbix/etc/discovery_process.shUserParameter=discovery.process,/usr/local/zabbix/etc/discovery_process.shUserParameter=process.check[*],/usr/local/zabbix/etc/process_check.sh $1 $2 $3vi .my.cnf[client]user=roothost=192.168.3.230password=123456vi chk_mysql.sh#!/bin/bash# 用户名MYSQL_USER='root'# 密码MYSQL_PWD='123456'# 主机地址/IPMYSQL_HOST='192.168.3.230'# 端口MYSQL_PORT='3306'# 数据连接MYSQL_CONN="/usr/bin/mysqladmin -u${MYSQL_USER} -p${MYSQL_PWD} -h${MYSQL_HOST} -P${MYSQL_PORT}"# 参数是否正确if [ $# -ne "1" ];thenecho "arg error!"fi# 获取数据case $1 inUptime)result=`${MYSQL_CONN} status 2>/dev/null|cut -f2 -d":"|cut -f1 -d"T"`echo $result;;Com_update)result=`${MYSQL_CONN} extended-status 2>/dev/null|grep -w "Com_update"|cut -d"|" -f3`echo $result;;Slow_queries)result=`${MYSQL_CONN} status 2>/dev/null|cut -f5 -d":"|cut -f1 -d"O"`echo $result;;Com_select)result=`${MYSQL_CONN} extended-status 2>/dev/null|grep -w "Com_select"|cut -d"|" -f3`echo $result;;Com_rollback)result=`${MYSQL_CONN} extended-status 2>/dev/null|grep -w "Com_rollback"|cut -d"|" -f3`echo $result;;Questions)result=`${MYSQL_CONN} status 2>/dev/null|cut -f4 -d":"|cut -f1 -d"S"`echo $result;;Com_insert)result=`${MYSQL_CONN} extended-status 2>/dev/null|grep -w "Com_insert"|cut -d"|" -f3`echo $result;;Com_delete)result=`${MYSQL_CONN} extended-status 2>/dev/null|grep -w "Com_delete"|cut -d"|" -f3`echo $result;;Com_commit)result=`${MYSQL_CONN} extended-status 2>/dev/null|grep -w "Com_commit"|cut -d"|" -f3`echo $result;;Bytes_sent)result=`${MYSQL_CONN} extended-status 2>/dev/null|grep -w "Bytes_sent" |cut -d"|" -f3`echo $result;;Bytes_received)result=`${MYSQL_CONN} extended-status 2>/dev/null|grep -w "Bytes_received" |cut -d"|" -f3`echo $result;;Com_begin)result=`${MYSQL_CONN} extended-status 2>/dev/null|grep -w "Com_begin"|cut -d"|" -f3`echo $result;;*)echo "Usage:$0(Uptime|Com_update|Slow_queries|Com_select|Com_rollback|Questions|Com_insert|Com_delete|Com_commit|Bytes_sent|Bytes_received|Com_begin)";;esacvi discovery_process.sh#!/bin/bash#system process discovery scripttop -b -n 1 > /tmp/.top.txt && chown zabbix. /tmp/.top.txtproc_array=(`tail -n +8 /tmp/.top.txt | awk '{a[$NF]+=$10}END{for(k in a)print a[k],k}'|sort -gr|head -10|cut -d" " -f2`)length=${#proc_array[@]}printf "{\n"printf '\t'"\"data\":["for ((i=0;i<$length;i++)) 100="" do="" printf="" "\n\t\t{"="" "\"{#process_name}\":\"${proc_array[$i]}\"}"="" if="" [="" $i="" -lt="" $[$length-1]="" ];then="" ","="" fi="" done="" "\n\t]\n"="" "}\n"="" vi="" process_check.sh="" #!="" bin="" bash="" #system="" process="" cpu&mem="" use="" information="" #mail:="" mail@huangming.org="" mode="$1" name="$2" mem_total="$(cat" proc="" meminfo="" |="" grep="" "memtotal"="" awk="" '{printf="" "%.f",$2="" 1024}')="" cpu_total="$((" $(cat="" cpuinfo="" "processor"="" wc="" -l)="" *="" ))="" function="" mempre="" {="" mem_pre="`tail" -n="" +8="" tmp="" .top.txt="" '{a[$nf]+="$10}END{for(k" in="" a)print="" a[k],k}'="" "\b${process}\b"="" cut="" -d"="" "="" -f1`="" echo="" "$mem_pre"="" }="" memuse="" mem_use="`tail" a[k]="" 100*'''${mem_total}''',k}'="" "$mem_use"="" "%.f",$1*1024*1024}'="" cpuuse="" cpu_use="`tail" "$cpu_use"="" cpupre="" cpu_pre="`tail" ('''${cpu_total}'''),k}'="" "$cpu_pre"="" case="" $name="" mem)="" "$mode"="pre" elif="" ;;="" cpu)="" *)="" -e="" "usage:="" $0="" [mode="" :="" pre|avg]="" [mem|cpu]="" [process]"="" esac="" windows(win10x64):="" zabbix_agentd.win.conf="" -="">#mysql状态数据UserParameter=mysql.version, cscript /nologo  E:\zabbix_agent\scripts\mysql_version.vbsUserParameter=mysql.status[*], cscript /nologo E:\zabbix_agent\scripts\MYSQL-status.vbs $1 #mysql性能数据UserParameter=mysql.xn[*], cscript /nologo E:\zabbix_agent\scripts\mysql_xn.vbs $1#系统进程列表UserParameter=process.list, cscript /nologo E:\zabbix_agent\scripts\process_list.vbsmysql_version.vbs ->Set objFS = CreateObject("Scripting.FileSystemObject")Set objArgs = WScript.Argumentsstr1 = getCommandOutput("C:\Program Files\MySQL\MySQL Server 5.7\bin\mysql.exe -V")WScript.Echo str1Function getCommandOutput(theCommand)Dim objShell, objCmdExecSet objShell = CreateObject("WScript.Shell")Set objCmdExec = objshell.exec(thecommand)getCommandOutput = objCmdExec.StdOut.ReadAllend FunctionMYSQL-status.vbs ->Set objFS = CreateObject("Scripting.FileSystemObject")Set objArgs = WScript.Argumentsstr1 = getCommandOutput("C:\Program Files\MySQL\MySQL Server 5.7\bin\mysqladmin-uroot -p123456 extended-status") Arg = objArgs(0)str2 = Split(str1,"|") For i = LBound(str2) to UBound(str2) If Trim(str2(i)) = Arg Then   WScript.Echo TRIM(str2(i+1))Exit ForEnd Ifnext  Function getCommandOutput(theCommand) Dim objShell, objCmdExecSet objShell =CreateObject("WScript.Shell")Set objCmdExec = objshell.exec(thecommand)getCommandOutput =objCmdExec.StdOut.ReadAllend Functionmysql_xn.vbs ->Set objFS = CreateObject("Scripting.FileSystemObject")Set objArgs = WScript.ArgumentsArg = objArgs(0)'已创建线程数If "Threads" = Arg Thenstr1 = getCommandOutput1(" status") str2 = Split(str1,"  ") For i = LBound(str2) to UBound(str2)str3 = Split(Trim(str2(i)),":")If Trim(str3(0)) = "Threads" Then   WScript.Echo CINT(TRIM(str3(1)))Exit ForEnd Ifnext'索引缓存未命中率ElseIf "Key_cache_miss_rate" = Arg Thenstr1 = getCommandOutput("-e ""show status like 'key_reads';""") str1_1 = Split(CStr(str1), "Key_reads")str1_2 = CINT(Trim(str1_1(1)))str2 = getCommandOutput("-e ""show status like 'key_read_requests';""")str2_1 = Split(CStr(str2), "Key_read_requests")str2_2 = CINT(Trim(str2_1(1)))WScript.Echo formatnumber(str1_2/str2_2*100,4,true) '缓存簇使用率ElseIf "Key_blocks_used_rate" = Arg Thenstr1 = getCommandOutput("-e ""show status like 'key_blocks_used';""") str1_1 = Split(CStr(str1), "Key_blocks_used")str1_2 = CINT(Trim(str1_1(1)))str2 = getCommandOutput("-e ""show status like 'key_blocks_unused';""") str2_1 = Split(CStr(str2), "Key_blocks_unused")str2_2 = CINT(Trim(str2_1(1)))WScript.Echo formatnumber(str1_2/(str1_2+str2_2)*100,4,true)'当前链接数ElseIf "Threads_connected" = Arg Thenstr1 = getCommandOutput("-e ""show status like 'Threads_connected';""") str1_1 = Split(CStr(str1), "Threads_connected")str1_2 = CINT(Trim(str1_1(1)))WScript.Echo str1_2'表缓存利用率ElseIf "Table_open_cache_used_rate" = Arg Thenstr1 = getCommandOutput("-e ""show status like 'open_tables';""") str1_1 = Split(CStr(str1), "Open_tables")str1_2 = CINT(Trim(str1_1(1)))str2 = getCommandOutput("-e ""show variables like 'table_open_cache';""") str2_1 = Split(CStr(str2), "table_open_cache")str2_2 = CINT(Trim(str2_1(1)))WScript.Echo formatnumber(str1_2/(str1_2+str2_2)*100,4,true)'查询缓存利用率ElseIf "Qcache_used_rate" = Arg Thenstr1 = getCommandOutput("-e ""show variables like 'query_cache_size';""") str1_1 = Split(CStr(str1), "query_cache_size")str1_2 = CINT(Trim(str1_1(1)))If str1_2 = 0 Then WScript.Echo 0Else str2 = getCommandOutput("-e ""show status like 'Qcache_free_memory';""") str2_1 = Split(CStr(str2), "Qcache_free_memory")str2_2 = CINT(Trim(str2_1(1)))WScript.Echo formatnumber((str1_2-str2_2)/str1_2*100,4,true)End If'查询缓存碎片率ElseIf "Qcache_fragment_rate" = Arg Thenstr1 = getCommandOutput("-e ""show status like 'Qcache_free_blocks';""") str1_1 = Split(CStr(str1), "Qcache_free_blocks")str1_2 = CINT(Trim(str1_1(1)))If str1_2 = 0 ThenWScript.Echo 0Else str2 = getCommandOutput("-e ""show status like 'Qcache_total_blocks';""") str2_1 = Split(CStr(str2), "Qcache_total_blocks")str2_2 = CINT(Trim(str2_1(1)))WScript.Echo formatnumber(str1_2/str2_2*100,4,true)End If'最大响应链接数ElseIf "Max_used_connections" = Arg Thenstr1 = getCommandOutput("-e ""show status like 'Max_used_connections';""") str1_1 = Split(CStr(str1), "Max_used_connections")str1_2 = CINT(Trim(str1_1(1)))WScript.Echo str1_2'查询缓存命中率ElseIf "Qcache_hits_rate" = Arg Thenstr1 = getCommandOutput("-e ""show status like 'Qcache_hits';""") str1_1 = Split(CStr(str1), "Qcache_hits")str1_2 = CINT(Trim(str1_1(1)))If str1_2 = 0 ThenWScript.Echo 0Else str2 = getCommandOutput("-e ""show status like 'Qcache_inserts';""") str2_1 = Split(CStr(str2), "Qcache_inserts")str2_2 = CINT(Trim(str2_1(1)))WScript.Echo formatnumber((str1_2-str2_2)/str1_2*100,4,true)End If'文件使用率ElseIf "Open_files_rate" = Arg Thenstr1 = getCommandOutput("-e ""show global status like 'open_files';""") str1_1 = Split(CStr(str1), "Open_files")str1_2 = CINT(Trim(str1_1(1)))str2 = getCommandOutput("-e ""show variables like 'open_files_limit';""") str2_1 = Split(CStr(str2), "open_files_limit")str2_2 = CINT(Trim(str2_1(1)))WScript.Echo formatnumber(str1_2/str2_2*100,4,true)ElseIf "Ping" = Arg Thenstr1 = getCommandOutput1(" ping") If Instr(str1, "alive") Then WScript.Echo 1Else WScript.Echo 0End IfEnd IfFunction getCommandOutput1(theCommand)Dim objShell, objCmdExecSet objShell =CreateObject("WScript.Shell")Set objCmdExec = objshell.exec("C:\Program Files\MySQL\MySQL Server 5.7\bin\mysqladmin -uroot -p123456 " & thecommand)getCommandOutput1 =objCmdExec.StdOut.ReadAllend FunctionFunction getCommandOutput(theCommand)Dim objShell, objCmdExecSet objShell =CreateObject("WScript.Shell")Set objCmdExec = objshell.exec("C:\Program Files\MySQL\MySQL Server 5.7\bin\mysql -uroot -p123456 " & thecommand)getCommandOutput =objCmdExec.StdOut.ReadAllend Functionprocess_list.vbs ->Dim WMI,Objs,ProcessSet WMI=GetObject("WinMgmts:")Set Objs=WMI.InstancesOf("Win32_Process")Process=""For Each Obj In Objs  Process=Process & Obj.Description & Chr(13) & Chr(10)NextWScript.Echo Process{% endcodeblock %}</$length;i++))></code></pre><p>监控硬件的一些脚本</p><pre><code>    {% codeblock %}windows:利用SpeedFan软件的日志监控；cp_cpufan.vbs:'硬件信息set fs =createobject("Scripting.FileSystemObject")Set objArgs = WScript.ArgumentsArg = objArgs(0)month1 = "" & Month(Now)if Len(month1)<2 853="" 984="" then="" month1="0" &month1="" end="" if="" day1="day(Now)" len(day1)<2="" &day1="" dates="year(Now)&" &="" set="" ts="fs.opentextfile(" c:\program"="" files="" (x86)\speedfan\sflog"&="" &".csv",1,true)="" line="CStr(ts.read(100))" ts.close="" '日志记录为如下格式="" 'seconds="" gpu="" cpu="" fan1="" fan2="" '48968="" 32.0="" 41.0="" '48970="" ta="Split(line," vbcrlf)="" tt="Split(ta(1)," "="" ")="" arg="GPU_TEMP" wscript.echo="" tt(1)="" elseif="" tt(2)="" tt(3)="" tt(4)="" zabbix_agentd.win.conf:="" userparameter="hardware[*]," cscript="" nologo="" e:\zabbix_agent\scripts\cp_cpufan.vbs="" $1="" linux:="" 利用yum="" install="" lm_sensors；运行="" sensors-detect　检测内核模块，在引导下直接enter，使用默认选项="" 检测结束后运行="" sensors="" ，可以看到每颗cpu每个核心的温度="" vi="" zabbix_agentd.conf:="" "physical="" id="" $1"|cut="" -c="" 17-20="" {%="" endcodeblock="" %}="" <="" code=""></2></code></pre>]]></content>
      
      
      <categories>
          
          <category> zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zabbix </tag>
            
            <tag> 监控 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
